(function(){var n={UO:ko.utils.unwrapObservable};n.CO=ko.bindingHandlers.chosen={init:function(t,i,r,u,f){var e,s,o;if($(t).prop("tagName")!=="SELECT")throw"chosen binding can be applied only for select";$(t).addClass("chosen-select");e=i();n.CO.updateSelect(t,e,f,u);o={width:$(t).outerWidth()+"px"};e.chosenOption&&(o=$.extend(o,n.UO(e.chosenOption)));s=$(t).chosen(o);$(t).parent();s.change(function(){n.CO.updateValue(e,$(t).val(),t,r)})},updateValue:function(t,i,r){var u,e,f,o;if($.isArray(i)&&t.selectedValueItemProp)throw"Not supported yet";for(u=[],$.isArray(i)?u=i:u.push(i),e=[],f=0;f<u.length;f++)typeof u[f]!="undefined"&&u[f]!=null&&u[f]!=""&&(o=$(r).children("[value="+u[f]+"]").data("item"),typeof n.UO(t.valueProp)!="undefined"&&(o=n.UO(o[n.UO(t.valueProp)])),e.push(o));if(ko.isObservable(t.selectedValue))$(r).prop("multiple")?t.selectedValue(e):t.selectedValue(e[0]);else throw"selectedValue must be bound to an observable field";},update:function(t,i,r,u,f){n.CO.updateSelect(t,i(),f,u);n.CO.updateValue(i(),$(t).val(),t,r);$(t).trigger("chosen:updated")},updateSelect:function(t,i,r,u){function w(n,t,i){for(var u,r=0;r<n.length;r++)if(u=n[r],t&&(u=u[t]),u==i)return!0;return!1}var f,a,e,v;t=$(t);t.empty();$(t).prepend("<option><\/option>");var s=n.UO(i),h=n.UO(s.source),y=n.UO(s.valueProp),c=n.UO(s.selectedValue),o=n.UO(s.displayProp),p=n.UO(s.selectedValueItemProp),l=[];for($.isArray(c)?l=c:l.push(c),f=0;f<h.length;f++)a=n.UO(h[f]),y&&(a=n.UO(h[f][y])),e=n.UO(h[f]),o&&(e=o in e?n.UO(e[o]):function(){var n,f,i;return t[0][o]?n=t[0][o]:(f="with ($bindingContext){with($bindingContextOverride) {with ($currentItem) {return "+o+";}}}",t[0][o]=n=new Function("$bindingContext","$currentItem","$bindingContextOverride",f)),i={$parents:r.$parents.slice(0),$data:e,$parent:u},i.$parents.splice(0,0,u),n(r,e,i)}()),v=w(l,p,a)?$('<option selected="selected" value="'+f+'">'+e+"<\/option>"):$('<option value="'+f+'">'+e+"<\/option>"),v.data("item",n.UO(h[f])),t.append(v)}}})();
/*
//# sourceMappingURL=cb-ko-binding-chosen.min.js.map
*/